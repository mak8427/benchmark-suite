name: ci.yml
on:
  # Run on every commit to any branch
  push:
  pull_request:
  schedule:
    # Run dependency updates weekly
    - cron: '0 2 * * 1'


jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"
      - name: Cache pip dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-3.12-${{ hashFiles('**/src/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-3.12-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r src/requirements.txt
          pip install pytest-cov pytest-xdist

      - name: Install pre-commit hooks
        run: |
          pip install pre-commit
          pre-commit install

      - name: Run linting
        run: |
          pre-commit run --all-files || true

      - name: Run unit tests with coverage
        run: |
          python -m pytest tests/ -v --tb=short --cov=src --cov-report=xml --cov-report=term-missing

      - name: Run linting
        run: |
          pre-commit run --all-files || true


  build:
    runs-on: ubuntu-latest
    needs: test
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python 3.12
      uses: actions/setup-python@v4
      with:
        python-version: "3.12"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r src/requirements.txt
        pip install build twine

    - name: Build package
      run: |
        pip install -e .

    - name: Build distributions
      run: |
        rm -rf dist build *.egg-info
        python -m build  # creates dist/*.tar.gz and dist/*.whl

    - name: Check distributions with twine
      run: twine check dist/*

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: dist-3.12-${{ github.sha }}
        path: dist/

  dependency-update:
    runs-on: ubuntu-latest
    if: github.event_name == 'schedule'
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python 3.12
      uses: actions/setup-python@v4
      with:
        python-version: "3.12"

    - name: Install pip-tools
      run: |
        pip install pip-tools

    - name: Check for outdated dependencies
      run: |
        pip list --outdated --format=freeze > outdated.txt || true
        if [ -s outdated.txt ]; then
          echo "Outdated dependencies found:"
          cat outdated.txt
          exit 1
        fi
  cli-slurm:
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
        ports:
          - "8888:3306"
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
    steps:
      - uses: actions/checkout@v3

      - uses: koesterlab/setup-slurm-action@v1


